import React, { useState, useEffect, useRef } from "react";

// üî° –°–ø–∏—Å–æ–∫ –∞–¥—Ä–µ—Å–æ–≤ (–ø—Ä–∏–º–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
const addressList = [
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 2–ë",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 2–î",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 4",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 5",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 10–ê",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 10–ë",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 10–í",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 9",
  "–°–µ—Ä–µ–±—Ä–æ–≤—Å–∫–∞—è 2–ê",
  "–°–µ—Ä–µ–±—Ä–æ–≤—Å–∫–∞—è 2–ë",
  "–°–µ—Ä–µ–±—Ä–æ–≤—Å–∫–∞—è 2",
  "–°–µ—Ä–µ–±—Ä–æ–≤—Å–∫–∞—è 6",
  "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–π –ø–µ—Ä–µ—É–ª–æ–∫ 1",
  "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–π –ø–µ—Ä–µ—É–ª–æ–∫ 2",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 11",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 14",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 16",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 18",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 20",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 20A",
  "–ú–∞—è–∫–æ–≤—Å–∫–æ–≥–æ 7",
  "–ú–∞—è–∫–æ–≤—Å–∫–æ–≥–æ 8",
  "–ú–∞—è–∫–æ–≤—Å–∫–æ–≥–æ 10",
  "–ú–∞—è–∫–æ–≤—Å–∫–æ–≥–æ 9",
  "–í—ã–±–æ—Ä–≥—Å–∫–∏–π –ø–µ—Ä–µ—É–ª–æ–∫ 4",
  "–í—ã–±–æ—Ä–≥—Å–∫–∏–π –ø–µ—Ä–µ—É–ª–æ–∫ 6",
  "–í—ã–±–æ—Ä–≥—Å–∫–∏–π –ø–µ—Ä–µ—É–ª–æ–∫ 5",
  "–í—ã–±–æ—Ä–≥—Å–∫–∏–π –ø–µ—Ä–µ—É–ª–æ–∫ 3–ê",
  "–í—ã–±–æ—Ä–≥—Å–∫–∏–π –ø–µ—Ä–µ—É–ª–æ–∫ 2",
  "–ú–∞—è–∫–æ–≤—Å–∫–æ–≥–æ 4/17",
  "–°–µ—Ä–µ–±—Ä–æ–≤—Å–∫–∞—è 12",
  "–ú–∞—è–∫–æ–≤—Å–∫–æ–≥–æ 3/19",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 21",
  "–ú–∞—è–∫–æ–≤—Å–∫–æ–≥–æ 1",
  "–°–µ—Ä–µ–±—Ä–æ–≤—Å–∫–∞—è 14",
  "–°–µ—Ä–µ–±—Ä–æ–≤—Å–∫–∞—è 16",
  "–°–µ—Ä–µ–±—Ä–æ–≤—Å–∫–∞—è 18",
  "–°–µ—Ä–µ–±—Ä–æ–≤—Å–∫–∞—è 20",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 6",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 8",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 27–ê",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 29-3",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 27",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 24",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 28",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 30",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 26",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 16",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 29-2",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 29-1",
  "–ì–∞–≥–∞—Ä–∏–Ω–∞ 29-4",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 11",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 15",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 11–ê",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 7",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 2–ê",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 1",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 2",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 4",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 3",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 5",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 7",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 8",
  "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è 2",
  "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è 1-1",
  "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è 4–ê",
  "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è 1-2",
  "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è 4",
  "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è 3-1",
  "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è 3-2",
  "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è 6",
  "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è 6–ê",
  "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è 7-2",
  "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è 7-1",
  "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è 10",
  "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è 7-3",
  "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è 9-1",
  "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è 9-2",
  "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è 12-1",
  "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è 9-3",
  "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è 12-2",
  "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è 9-4",
  "–ü–µ—Ä–µ—É–ª–æ–∫ –ü–æ–¥–≥–æ—Ä–Ω—ã–π 2",
  "–ü–µ—Ä–µ—É–ª–æ–∫ –ü–æ–¥–≥–æ—Ä–Ω—ã–π 3",
  "–ü–µ—Ä–µ—É–ª–æ–∫ –ü–æ–¥–≥–æ—Ä–Ω—ã–π 4",
  "–ü–µ—Ä–µ—É–ª–æ–∫ –ü–æ–¥–≥–æ—Ä–Ω—ã–π 5",
  "–ü–µ—Ä–µ—É–ª–æ–∫ –ü–æ–¥–≥–æ—Ä–Ω—ã–π 7",
  "–ü–µ—Ä–µ—É–ª–æ–∫ –ü–æ–¥–≥–æ—Ä–Ω—ã–π 8",
  "–ü–µ—Ä–µ—É–ª–æ–∫ –ü–æ–¥–≥–æ—Ä–Ω—ã–π 9",
  "–ü–µ—Ä–µ—É–ª–æ–∫ –ü–æ–¥–≥–æ—Ä–Ω—ã–π 10",
  "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è 5–ê",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 19",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 17",
  "–ß–µ—Ä–Ω–æ–º–æ—Ä—Å–∫–∞—è 33-3",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 15",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 14",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 12–ê",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 13",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 12",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 11–ê",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 11",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 10",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 9",
  "–ß–µ—Ä–Ω–æ–º–æ—Ä—Å–∫–∞—è 33-2",
  "–ß–µ—Ä–Ω–æ–º–æ—Ä—Å–∫–∞—è 33-1",
  "–ß–µ—Ä–Ω–æ–º–æ—Ä—Å–∫–∞—è 33-4",
  "–ß–µ—Ä–Ω–æ–º–æ—Ä—Å–∫–∞—è 31",
  "–ß–µ—Ä–Ω–æ–º–æ—Ä—Å–∫–∞—è 30",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 19–ë",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 16–ê",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 19–í",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 19–î",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 21-1",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 18-1",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 18-2",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 21-2",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 20–ê-1",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 23-1",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 23-2",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 20–ê-2",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 20-1",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 25-1",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 20-2",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 20-3",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 25-2",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 27-1",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 27-4",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 29-3",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 27-2",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 29",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 29-4",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 31",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 31–ê",
  "–°–æ–≤–µ—Ç—Å–∫–∞—è 31",
  "–ü–æ–¥–≥–æ—Ä–Ω–∞—è 33",
  "–•–º–µ–ª—å–Ω–∏—Ü–∫–æ–≥–æ 2/42-2",
  "–•–º–µ–ª—å–Ω–∏—Ü–∫–æ–≥–æ 1-1",
  "–•–º–µ–ª—å–Ω–∏—Ü–∫–æ–≥–æ 1-2",
  "–•–º–µ–ª—å–Ω–∏—Ü–∫–æ–≥–æ 2/42-1",
  "–î–æ–Ω—Å–∫–æ–≥–æ 7",
  "–î–æ–Ω—Å–∫–æ–≥–æ 2",
  "–î–æ–Ω—Å–∫–æ–≥–æ 4",
  "–î–æ–Ω—Å–∫–æ–≥–æ 9-1",
  "–î–æ–Ω—Å–∫–æ–≥–æ 6-1",
  "–î–æ–Ω—Å–∫–æ–≥–æ 3",
  "–î–æ–Ω—Å–∫–æ–≥–æ 9-2",
  "–î–æ–Ω—Å–∫–æ–≥–æ 11-1",
  "–î–æ–Ω—Å–∫–æ–≥–æ 8-1",
  "–î–µ–∫–∞–±—Ä–∏—Å—Ç–æ–≤ 6-3",
  "–î–µ–∫–∞–±—Ä–∏—Å—Ç–æ–≤ 5-2",
  "–î–µ–∫–∞–±—Ä–∏—Å—Ç–æ–≤ 3",
  "–î–µ–∫–∞–±—Ä–∏—Å—Ç–æ–≤ 1-2",
  "–î–µ–∫–∞–±—Ä–∏—Å—Ç–æ–≤ 1-1",
  "–°–æ–≤–µ—Ç—Å–∫–∞—è 46-1",
  "–î–µ–∫–∞–±—Ä–∏—Å—Ç–æ–≤ 2-1",
  "–î–æ–Ω—Å–∫–æ–≥–æ 11-2",
  "–î–æ–Ω—Å–∫–æ–≥–æ 13-1",
  "–î–æ–Ω—Å–∫–æ–≥–æ 8-2",
  "–î–æ–Ω—Å–∫–æ–≥–æ 13-2",
  "–î–æ–Ω—Å–∫–æ–≥–æ 10-1",
  "–î–æ–Ω—Å–∫–æ–≥–æ 10-2",
  "–î–æ–Ω—Å–∫–æ–≥–æ 15-1",
  "–î–æ–Ω—Å–∫–æ–≥–æ 15-2",
  "–î–æ–Ω—Å–∫–æ–≥–æ 12-1",
  "–î–æ–Ω—Å–∫–æ–≥–æ 17-1",
  "–î–æ–Ω—Å–∫–æ–≥–æ 17-2",
  "–î–æ–Ω—Å–∫–æ–≥–æ 19-1",
  "–î–æ–Ω—Å–∫–æ–≥–æ 19-2",
  "–î–æ–Ω—Å–∫–æ–≥–æ 21-2",
  "–î–æ–Ω—Å–∫–æ–≥–æ 23-1",
  "–î–æ–Ω—Å–∫–æ–≥–æ 23-2",
  "–î–æ–Ω—Å–∫–æ–≥–æ 12-2",
  "–°–æ–≤–µ—Ç—Å–∫–∞—è 48–ê",
  "–°–æ–≤–µ—Ç—Å–∫–∞—è 48",
  "–°–æ–≤–µ—Ç—Å–∫–∞—è 46-2",
  "–°–æ–≤–µ—Ç—Å–∫–∞—è 44-1",
  "–°–æ–≤–µ—Ç—Å–∫–∞—è 44-2",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 29-2",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 29-1",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 27-3",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 36-2",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 27-1",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 36-1",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 34-2–ê",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 34-2",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 34-1",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 25-1",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 32-2",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 1",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 23",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 32-3",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 32-1",
  "–ß–µ—Ä–Ω–æ–º–æ—Ä—Å–∫–∞—è 26–ë",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 21",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 30",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 28",
  "–®–∫–æ–ª–∞",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 32-4",
  "–ö–æ—á–µ—à–∫–æ–≤–∞ 18",
  "–°–µ—Ä–µ–±—Ä–æ–≤—Å–∫–∞—è 24",
  "–°–µ—Ä–µ–±—Ä–æ–≤—Å–∫–∞—è 26",
  "–°–µ—Ä–µ–±—Ä–æ–≤—Å–∫–∞—è 28"
];

// üîÅ –ò–º–∏—Ç–∞—Ü–∏—è —Ä—É—Å—Å–∫–æ–π —Ä–∞—Å–∫–ª–∞–¥–∫–∏ —Å –∞–Ω–≥–ª. –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
const layoutMap = {
  'f': '–∞', 'i': '—à', 's': '—ã', 'v': '–º', 'l': '–¥', 't': '–µ', 'u': '–≥',
  'e': '—É', 'a': '—Ñ', 'r': '–∫', 'n': '—Ç', 'y': '–Ω', 'g': '–ø', 'd': '–≤',
  'o': '—â', 'z': '—è', 'h': '—Ä', 'c': '—Å', 'm': '—å', 'w': '—Ü', 'x': '—á',
  'j': '–æ', 'q': '–π', 'b': '–∏', 'k': '–ª', "'": '—ç', '`': '—ë', 'p': '–∑',
  ']': '—ä', '[': '—Ö', ';': '–∂', '.': '—é', ',': '–±'
};

// üí¨ –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è –ª–∞—Ç–∏–Ω–∏—Ü—ã –≤ –∫–∏—Ä–∏–ª–ª–∏—Ü—É (–ø—Ä–æ—Å—Ç–æ–π –≤–∞—Ä–∏–∞–Ω—Ç)
const transliterate = (text) => {
  const map = {
    yo: '—ë', zh: '–∂', ch: '—á', sh: '—à', shch: '—â', yu: '—é', ya: '—è',
    a: '–∞', b: '–±', v: '–≤', g: '–≥', d: '–¥', e: '–µ', z: '–∑', i: '–∏', y: '–π',
    k: '–∫', l: '–ª', m: '–º', n: '–Ω', o: '–æ', p: '–ø', r: '—Ä', s: '—Å', t: '—Ç',
    u: '—É', f: '—Ñ', h: '—Ö', c: '—Ü'
  };

  let result = '';
  let i = 0;
  text = text.toLowerCase();
  while (i < text.length) {
    const four = text.slice(i, i + 4);
    if (map[four]) {
      result += map[four];
      i += 4;
    } else {
      const two = text.slice(i, i + 2);
      if (map[two]) {
        result += map[two];
        i += 2;
      } else {
        result += map[text[i]] || text[i];
        i++;
      }
    }
  }
  return result;
};

// ‚ú® –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞
const normalize = (text) => text.replace(/\s|,|\.|-|_/g, '').toLowerCase();

export default function SearchDirectory() {
  const [query, setQuery] = useState("");
  const [filtered, setFiltered] = useState(addressList);
  const [highlightIndex, setHighlightIndex] = useState(null);
  const itemRefs = useRef([]);

  // üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å—Å—ã–ª–∫–∏ –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
  useEffect(() => {
    itemRefs.current = itemRefs.current.slice(0, filtered.length);
  }, [filtered]);

  const getVariants = (text) => {
    // –†–∞–∑–±–∏–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–ª–æ–≤–∞ (–ø–æ –ø—Ä–æ–±–µ–ª–∞–º) –∏ –Ω–∞ –±—É–∫–≤—ã/—Ü–∏—Ñ—Ä—ã
    let words = text.trim().split(/\s+/);
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–±–∏–≤–∞–µ–º –∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –Ω–∞ —á–∞—Å—Ç–∏: –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã
    const expandedWords = [];
    words.forEach(word => {
      // –†–∞–∑–±–∏–≤–∞–µ–º —Å–ª–æ–≤–æ –Ω–∞ —á–∞—Å—Ç–∏: –±—É–∫–≤—ã –æ—Ç–¥–µ–ª—å–Ω–æ, —Ü–∏—Ñ—Ä—ã –æ—Ç–¥–µ–ª—å–Ω–æ
      const parts = word.split(/(\d+)/).filter(part => part.length > 0);
      expandedWords.push(...parts);
    });
    
    words = expandedWords.filter(word => word.length > 0);
    
    return words.map(word => {
      const normalized = normalize(word);
      const translit = normalize(transliterate(word));
      const remapped = normalize(
        word.split('').map(c => layoutMap[c] || c).join('')
      );
      return [normalized, translit, remapped];
    });
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
  const isExactMatch = (query, address) => {
    const queryNorm = normalize(query);
    const addressNorm = normalize(address);
    
    // –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ –∞–¥—Ä–µ—Å–µ –∫–∞–∫ –ø–æ–¥—Å—Ç—Ä–æ–∫–∞
    const variants = getVariants(query);
    return variants.some(variantGroup => 
      variantGroup.some(variant => variant && addressNorm.includes(variant))
    );
  };
  const handleSearch = () => {
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º —Ç–æ—á–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –≤—Å–µ–º—É –∑–∞–ø—Ä–æ—Å—É
    for (let i = 0; i < filtered.length; i++) {
      if (isExactMatch(query, filtered[i])) {
        setHighlightIndex(i);
        itemRefs.current[i]?.scrollIntoView({ behavior: 'smooth', block: 'center' });
        return;
      }
    }
    
    // –ï—Å–ª–∏ —Ç–æ—á–Ω—ã–π –ø–æ–∏—Å–∫ –Ω–µ –¥–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤–∞–º
    const wordVariants = getVariants(query);
    for (let i = 0; i < filtered.length; i++) {
      const target = normalize(filtered[i]);
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Å–ª–æ–≤–∞ –Ω–∞–π–¥–µ–Ω—ã –≤ –∞–¥—Ä–µ—Å–µ
      const allWordsFound = wordVariants.every(variants => 
        variants.some(v => v && target.includes(v))
      );
      if (allWordsFound) {
        setHighlightIndex(i);
        itemRefs.current[i]?.scrollIntoView({ behavior: 'smooth', block: 'center' });
        return;
      }
    }
    setHighlightIndex(null);
    alert("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.");
  };

  useEffect(() => {
    if (!query) {
      setFiltered(addressList);
      setHighlightIndex(null);
      return;
    }
    const wordVariants = getVariants(query);
    const result = addressList.filter(addr => {
      const target = normalize(addr);
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Å–ª–æ–≤–∞ –Ω–∞–π–¥–µ–Ω—ã –≤ –∞–¥—Ä–µ—Å–µ
      return wordVariants.every(variants => 
        variants.some(v => v && target.includes(v))
      );
    });
    setFiltered(result);
    setHighlightIndex(null);
  }, [query]);

  useEffect(() => {
    const handler = e => e.key === 'Enter' && handleSearch();
    window.addEventListener('keydown', handler);
    return () => window.removeEventListener('keydown', handler);
  }, [query, filtered]);

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-slate-100 p-4">
      <div className="max-w-4xl mx-auto">
        <div className="bg-white rounded-xl shadow-lg p-8">
          <h2 className="text-3xl font-bold text-slate-800 mb-6 text-center">
            üìÆ –ö–∞—Ç–∞–ª–æ–≥ –∫–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ü–∏–∏
          </h2>
          
          <div className="mb-6">
            <input
              type="text"
              className="w-full p-4 text-lg border-2 border-slate-300 rounded-lg focus:border-yellow-400 focus:outline-none transition-colors duration-200 font-mono"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∏–ª–∏ —á–∞—Å—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, '—Å–µ—Ä–µ 28', 'arbat', 'fh,fn')"
              value={query}
              onChange={e => setQuery(e.target.value)}
            />
            <p className="text-sm text-slate-600 mt-2">
              üí° –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç: –∫–∏—Ä–∏–ª–ª–∏—Ü—É, –ª–∞—Ç–∏–Ω–∏—Ü—É, –∞–Ω–≥–ª–∏–π—Å–∫—É—é —Ä–∞—Å–∫–ª–∞–¥–∫—É
            </p>
          </div>

          <div className="flex gap-3 mb-6">
            <button
              className="px-6 py-3 bg-yellow-400 hover:bg-yellow-500 text-slate-800 font-semibold rounded-lg transition-colors duration-200 flex items-center gap-2"
              onClick={handleSearch}
            >
              üîç –ù–∞–π—Ç–∏
            </button>
            <button
              className="px-6 py-3 bg-slate-200 hover:bg-slate-300 text-slate-700 font-semibold rounded-lg transition-colors duration-200 flex items-center gap-2"
              onClick={() => {
                setQuery('');
                setFiltered(addressList);
                setHighlightIndex(null);
              }}
            >
              üîÑ –°–±—Ä–æ—Å–∏—Ç—å
            </button>
          </div>

          <div className="text-sm text-slate-600 mb-4">
            –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: <span className="font-semibold">{filtered.length}</span> –∏–∑ {addressList.length}
          </div>

          <div className="max-h-96 overflow-y-auto border rounded-lg">
            <ul className="space-y-1 p-2">
              {filtered.map((address, index) => {
                // –ù–∞—Ö–æ–¥–∏–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –≤ –ø–æ–ª–Ω–æ–º —Å–ø–∏—Å–∫–µ
                const originalIndex = addressList.indexOf(address);
                return (
                <li
                  key={originalIndex}
                  ref={el => itemRefs.current[index] = el}
                  className={`p-3 rounded-lg border transition-all duration-200 font-mono ${
                    highlightIndex === index
                      ? 'bg-yellow-100 border-yellow-400 font-bold shadow-md'
                      : 'bg-white border-slate-200 hover:bg-slate-50'
                  }`}
                >
                  <span className="text-slate-500 font-semibold">
                    –Ø—á–µ–π–∫–∞ {originalIndex + 1}
                  </span>
                  <span className="text-slate-600 mx-2">‚Äî</span>
                  <span className="text-slate-800">
                    {address}
                  </span>
                </li>
                );
              })}
            </ul>
          </div>

          {filtered.length === 0 && query && (
            <div className="text-center py-8 text-slate-500">
              <div className="text-4xl mb-2">üîç</div>
              <p>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É "{query}"</p>
              <p className="text-sm mt-2">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å</p>
            </div>
          )}
        </div>
      </div>
    </div>
  );
}